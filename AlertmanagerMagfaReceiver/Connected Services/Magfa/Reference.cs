//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Magfa
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://magfa.com/soap/SOAPSmsQueue", ConfigurationName="Magfa.SoapSmsQueuableImplementation")]
    internal interface SoapSmsQueuableImplementation
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMessageStatusReturn")]
        System.Threading.Tasks.Task<int> getMessageStatusAsync(long messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDetailedStatusesReturn")]
        System.Threading.Tasks.Task<Magfa.DeliveryStatus[]> getDetailedStatusesAsync(string domain, long[] messagesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMessageStatusesReturn")]
        System.Threading.Tasks.Task<int[]> getMessageStatusesAsync(long[] messagesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getRealMessageStatusesReturn")]
        System.Threading.Tasks.Task<int[]> getRealMessageStatusesAsync(long[] messagesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getAllMessagesWithNumberReturn")]
        System.Threading.Tasks.Task<object[]> getAllMessagesWithNumberAsync(string domain, int numberOfMessages, string destNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMessagesWithNumberReturn")]
        System.Threading.Tasks.Task<object[]> getMessagesWithNumberAsync(string domain, int numberOfMessages, string destNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCreditReturn")]
        System.Threading.Tasks.Task<float> getCreditAsync(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getAllMessagesReturn")]
        System.Threading.Tasks.Task<object[]> getAllMessagesAsync(string domain, int numberOfMessages);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMessagesReturn")]
        System.Threading.Tasks.Task<object[]> getMessagesAsync(string domain, int numberOfMessages);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enqueueWithGatewayReturn")]
        System.Threading.Tasks.Task<long[]> enqueueWithGatewayAsync(string domain, string[] messageBodies, string[] recipientNumbers, string[] senderNumbers, int[] encodings, string[] udhs, int[] messageClasses, int[] priorities, long[] checkingMessageIds, string gateway);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMessageIdReturn")]
        System.Threading.Tasks.Task<long> getMessageIdAsync(string domain, long checkingMessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomerReturnIncomingFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryStatus))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="enqueueReturn")]
        System.Threading.Tasks.Task<long[]> enqueueAsync(string domain, string[] messageBodies, string[] recipientNumbers, string[] senderNumbers, int[] encodings, string[] udhs, int[] messageClasses, int[] priorities, long[] checkingMessageIds);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SOAPSmsQueue")]
    public partial class DeliveryStatus
    {
        
        private string dateField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DatedCustomerReturnIncomingFormat))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SOAPSmsQueue")]
    public partial class CustomerReturnIncomingFormat
    {
        
        private string bodyField;
        
        private string errorResultField;
        
        private string recipientNumberField;
        
        private string senderNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string body
        {
            get
            {
                return this.bodyField;
            }
            set
            {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string errorResult
        {
            get
            {
                return this.errorResultField;
            }
            set
            {
                this.errorResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string recipientNumber
        {
            get
            {
                return this.recipientNumberField;
            }
            set
            {
                this.recipientNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string senderNumber
        {
            get
            {
                return this.senderNumberField;
            }
            set
            {
                this.senderNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SOAPSmsQueue")]
    public partial class DatedCustomerReturnIncomingFormat : CustomerReturnIncomingFormat
    {
        
        private string dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface SoapSmsQueuableImplementationChannel : Magfa.SoapSmsQueuableImplementation, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class SoapSmsQueuableImplementationClient : System.ServiceModel.ClientBase<Magfa.SoapSmsQueuableImplementation>, Magfa.SoapSmsQueuableImplementation
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SoapSmsQueuableImplementationClient() : 
                base(SoapSmsQueuableImplementationClient.GetDefaultBinding(), SoapSmsQueuableImplementationClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.TSOAP.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SoapSmsQueuableImplementationClient(EndpointConfiguration endpointConfiguration) : 
                base(SoapSmsQueuableImplementationClient.GetBindingForEndpoint(endpointConfiguration), SoapSmsQueuableImplementationClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SoapSmsQueuableImplementationClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SoapSmsQueuableImplementationClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SoapSmsQueuableImplementationClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SoapSmsQueuableImplementationClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SoapSmsQueuableImplementationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<int> getMessageStatusAsync(long messageId)
        {
            return base.Channel.getMessageStatusAsync(messageId);
        }
        
        public System.Threading.Tasks.Task<Magfa.DeliveryStatus[]> getDetailedStatusesAsync(string domain, long[] messagesId)
        {
            return base.Channel.getDetailedStatusesAsync(domain, messagesId);
        }
        
        public System.Threading.Tasks.Task<int[]> getMessageStatusesAsync(long[] messagesId)
        {
            return base.Channel.getMessageStatusesAsync(messagesId);
        }
        
        public System.Threading.Tasks.Task<int[]> getRealMessageStatusesAsync(long[] messagesId)
        {
            return base.Channel.getRealMessageStatusesAsync(messagesId);
        }
        
        public System.Threading.Tasks.Task<object[]> getAllMessagesWithNumberAsync(string domain, int numberOfMessages, string destNumber)
        {
            return base.Channel.getAllMessagesWithNumberAsync(domain, numberOfMessages, destNumber);
        }
        
        public System.Threading.Tasks.Task<object[]> getMessagesWithNumberAsync(string domain, int numberOfMessages, string destNumber)
        {
            return base.Channel.getMessagesWithNumberAsync(domain, numberOfMessages, destNumber);
        }
        
        public System.Threading.Tasks.Task<float> getCreditAsync(string domain)
        {
            return base.Channel.getCreditAsync(domain);
        }
        
        public System.Threading.Tasks.Task<object[]> getAllMessagesAsync(string domain, int numberOfMessages)
        {
            return base.Channel.getAllMessagesAsync(domain, numberOfMessages);
        }
        
        public System.Threading.Tasks.Task<object[]> getMessagesAsync(string domain, int numberOfMessages)
        {
            return base.Channel.getMessagesAsync(domain, numberOfMessages);
        }
        
        public System.Threading.Tasks.Task<long[]> enqueueWithGatewayAsync(string domain, string[] messageBodies, string[] recipientNumbers, string[] senderNumbers, int[] encodings, string[] udhs, int[] messageClasses, int[] priorities, long[] checkingMessageIds, string gateway)
        {
            return base.Channel.enqueueWithGatewayAsync(domain, messageBodies, recipientNumbers, senderNumbers, encodings, udhs, messageClasses, priorities, checkingMessageIds, gateway);
        }
        
        public System.Threading.Tasks.Task<long> getMessageIdAsync(string domain, long checkingMessageId)
        {
            return base.Channel.getMessageIdAsync(domain, checkingMessageId);
        }
        
        public System.Threading.Tasks.Task<long[]> enqueueAsync(string domain, string[] messageBodies, string[] recipientNumbers, string[] senderNumbers, int[] encodings, string[] udhs, int[] messageClasses, int[] priorities, long[] checkingMessageIds)
        {
            return base.Channel.enqueueAsync(domain, messageBodies, recipientNumbers, senderNumbers, encodings, udhs, messageClasses, priorities, checkingMessageIds);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TSOAP))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TSOAP))
            {
                return new System.ServiceModel.EndpointAddress("https://sms.magfa.com/services/urn:SOAPSmsQueue");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SoapSmsQueuableImplementationClient.GetBindingForEndpoint(EndpointConfiguration.TSOAP);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SoapSmsQueuableImplementationClient.GetEndpointAddress(EndpointConfiguration.TSOAP);
        }
        
        public enum EndpointConfiguration
        {
            
            TSOAP,
        }
    }
}
